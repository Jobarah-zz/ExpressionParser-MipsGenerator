Terminals unused in grammar

   TK_EOF
   TK_ERROR


Grammar

    0 $accept: input $end

    1 input: ExprList

    2 ExprList: ExprList E
    3         | E

    4 E: E "+" T
    5  | E "-" T
    6  | T

    7 T: T "*" F
    8  | F

    9 F: LIT_INT
   10  | ID
   11  | "(" E ")"


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10
LIT_INT (259) 9
TK_EOF (260)
TK_ERROR (261)
"+" (262) 4
"*" (263) 7
"-" (264) 5
"(" (265) 11
")" (266) 11


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
input (13)
    on left: 1, on right: 0
ExprList (14)
    on left: 2 3, on right: 1 2
E (15)
    on left: 4 5 6, on right: 2 3 4 5 11
T (16)
    on left: 7 8, on right: 4 5 6 7
F (17)
    on left: 9 10 11, on right: 7 8


State 0

    0 $accept: . input $end

    ID       shift, and go to state 1
    LIT_INT  shift, and go to state 2
    "("      shift, and go to state 3

    input     go to state 4
    ExprList  go to state 5
    E         go to state 6
    T         go to state 7
    F         go to state 8


State 1

   10 F: ID .

    $default  reduce using rule 10 (F)


State 2

    9 F: LIT_INT .

    $default  reduce using rule 9 (F)


State 3

   11 F: "(" . E ")"

    ID       shift, and go to state 1
    LIT_INT  shift, and go to state 2
    "("      shift, and go to state 3

    E  go to state 9
    T  go to state 7
    F  go to state 8


State 4

    0 $accept: input . $end

    $end  shift, and go to state 10


State 5

    1 input: ExprList .
    2 ExprList: ExprList . E

    ID       shift, and go to state 1
    LIT_INT  shift, and go to state 2
    "("      shift, and go to state 3

    $default  reduce using rule 1 (input)

    E  go to state 11
    T  go to state 7
    F  go to state 8


State 6

    3 ExprList: E .
    4 E: E . "+" T
    5  | E . "-" T

    "+"  shift, and go to state 12
    "-"  shift, and go to state 13

    $default  reduce using rule 3 (ExprList)


State 7

    6 E: T .
    7 T: T . "*" F

    "*"  shift, and go to state 14

    $default  reduce using rule 6 (E)


State 8

    8 T: F .

    $default  reduce using rule 8 (T)


State 9

    4 E: E . "+" T
    5  | E . "-" T
   11 F: "(" E . ")"

    "+"  shift, and go to state 12
    "-"  shift, and go to state 13
    ")"  shift, and go to state 15


State 10

    0 $accept: input $end .

    $default  accept


State 11

    2 ExprList: ExprList E .
    4 E: E . "+" T
    5  | E . "-" T

    "+"  shift, and go to state 12
    "-"  shift, and go to state 13

    $default  reduce using rule 2 (ExprList)


State 12

    4 E: E "+" . T

    ID       shift, and go to state 1
    LIT_INT  shift, and go to state 2
    "("      shift, and go to state 3

    T  go to state 16
    F  go to state 8


State 13

    5 E: E "-" . T

    ID       shift, and go to state 1
    LIT_INT  shift, and go to state 2
    "("      shift, and go to state 3

    T  go to state 17
    F  go to state 8


State 14

    7 T: T "*" . F

    ID       shift, and go to state 1
    LIT_INT  shift, and go to state 2
    "("      shift, and go to state 3

    F  go to state 18


State 15

   11 F: "(" E ")" .

    $default  reduce using rule 11 (F)


State 16

    4 E: E "+" T .
    7 T: T . "*" F

    "*"  shift, and go to state 14

    $default  reduce using rule 4 (E)


State 17

    5 E: E "-" T .
    7 T: T . "*" F

    "*"  shift, and go to state 14

    $default  reduce using rule 5 (E)


State 18

    7 T: T "*" F .

    $default  reduce using rule 7 (T)
